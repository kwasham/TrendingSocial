//
//  BotVoiceChatViewController.swift
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.19
//

import Foundation
import AWSLex
import UIKit
import AWSAuthCore

/// Manages a voice-to-voice conversation with a bot
class BotVoiceChatViewController: UIViewController, AWSLexVoiceButtonDelegate {
    
    var bot: Bot?
    
    // The AWS Lex Voice Button for voice-to-voice interaction
    @IBOutlet weak var voiceButton: AWSLexVoiceButton!
    
    // Label to show any text output
    @IBOutlet weak var output: UILabel!
    
    override func viewDidLoad() {
        
        // Set the bot configuration details
        let botName = bot!.configuration.name
        let botRegion = bot!.configuration.region
        let botAlias = bot!.configuration.alias
        
        // set up the configuration for AWS Voice Button
        let configuration = AWSServiceConfiguration(region: botRegion, credentialsProvider: AWSIdentityManager.default().credentialsProvider)
        let botConfig = AWSLexInteractionKitConfig.defaultInteractionKitConfig(withBotName: botName, botAlias: botAlias)
        // register the interaction kit client for the voice button using the `AWSLexVoiceButtonKey` constant defined in SDK
        AWSLexInteractionKit.register(with: configuration!, interactionKitConfiguration: botConfig, forKey: AWSLexVoiceButtonKey)
        super.viewDidLoad()
        (self.voiceButton as AWSLexVoiceButton).delegate = self
        
    }
    
    func voiceButton(_ button: AWSLexVoiceButton, on response: AWSLexVoiceButtonResponse) {
        print("on text output \(String(describing: response.outputText))")
        self.output.text = response.outputText
    }
    
    func voiceButton(_ button: AWSLexVoiceButton, onError error: Error) {
        print("error \(error)")
    }
    
}
